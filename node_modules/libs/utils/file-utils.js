'use strict';

var path = require('path');
var uploadFolder = path.resolve(__dirname+"../../../../uploadFolder");

/**
 * Appends a timestamp to a filename
 **/
function timestamp(filename) {
  // Get timestamp
  if (!Date.now) Date.now = function() { return new Date().getTime() };
  var extension = filename.split('.').slice(0).pop();
  filename = filename.replace(extension, '').replace(/\W+/g, '') + "_" + Date.now() + "." + extension;
  return filename;
}

exports.timestamp = timestamp;

/**
 * Returns a name for the resized image
 **/
function resized(filename, width, height) {
  var originalfilename = filename.split('.')[0];
  var extension = filename.split('.').slice(0).pop();
  return filename.replace(extension, '').replace(/\W+/g, '') + 
          "_resized_" + width + '-' + height + "." + extension;
}

exports.resized = resized;

/**
 * Returns a possibile location for an image named <filename> 
 * on the staging server
 **/
function localImagePath(req, filename) {
  return uploadFolder + '/img/' + req.user + "_" + filename;
}

exports.localImagePath = localImagePath;

/**
 * Returns a possibile location for an image named <filename> 
 * on the CDN
 **/
function remoteImagePath(req, filename) {
  return 'img/' + req.user + "/" + filename;
}

exports.remoteImagePath = remoteImagePath;
